name: 🔍 Roadmap Quality Assurance

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate-roadmap:
    name: 🗺️ Validate Roadmap Data
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: 🔍 Validate roadmap structure and links
      run: python scripts/validate_roadmap.py
      
    - name: 📊 Generate validation report
      if: failure()
      run: |
        echo "## ❌ Roadmap Validation Failed" >> $GITHUB_STEP_SUMMARY
        echo "The roadmap validation script found issues. Please check the logs above." >> $GITHUB_STEP_SUMMARY

  lint-markdown:
    name: 📝 Lint Markdown Files
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 📦 Install markdownlint
      run: npm install -g markdownlint-cli
      
    - name: 🔍 Lint markdown files
      run: markdownlint "**/*.md" --ignore node_modules

  lint-python:
    name: 🐍 Lint Python Code
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install ruff black isort mypy
        
    - name: 🔧 Run Ruff linter
      run: ruff check scripts/ backend/src/ --output-format=github
      
    - name: 🎨 Check code formatting with Black
      run: black --check scripts/ backend/src/
      
    - name: 📚 Check import sorting with isort
      run: isort --check-only --profile black scripts/ backend/src/

  generate-visuals:
    name: 🎨 Generate Visual Roadmaps
    runs-on: ubuntu-latest
    needs: validate-roadmap
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 🔧 Setup Node.js for Mermaid CLI
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 📦 Install Mermaid CLI
      run: npm install -g @mermaid-js/mermaid-cli
      
    - name: 🎨 Generate visual roadmaps
      run: python scripts/generate_roadmap_visual.py
      
    - name: 📤 Upload generated visuals
      uses: actions/upload-artifact@v3
      with:
        name: roadmap-visuals
        path: |
          docs/roadmap.mmd
          docs/roadmap.svg
        retention-days: 30

  check-links:
    name: 🔗 Check External Links
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔗 Check links in markdown files
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        use-verbose-mode: 'yes'
        config-file: '.github/workflows/mlc_config.json'

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔍 Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: 📤 Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
