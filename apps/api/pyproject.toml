[project]
name = "brainwav-api"
version = "0.1.0"
description = "brAInwav AI Platform Backend API"
authors = [{ name = "brAInwav Team" }]
requires-python = ">=3.11"
readme = "README.md"
license = { text = "MIT" }
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.0",
    "openai>=1.1.0",
    "google-generativeai>=0.3.0",
    "anthropic>=0.16.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "types-requests>=2.31.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
mypy_path = "src"
explicit_package_bases = true
# Ignore missing imports for local modules during development
disable_error_code = ["import-untyped"]
# Exclude scripts directory from strict checking
exclude = ["../scripts/.*"]

[[tool.mypy.overrides]]
module = "tests.*"
# Allow more flexibility in test files
disable_error_code = ["import-untyped", "import-not-found"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
    "A",  # flake8-builtins
    "I",  # isort
]
ignore = []

[tool.ruff.lint.isort]
force-single-line = false
known-first-party = ["brainwav_api"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/brainwav_api"]

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "types-pyyaml>=6.0.12.20250516",
    "types-requests>=2.32.4.20250611",
]
