{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/jamiecraik/repos/ai-engineering-roadmap/apps/web/src/lib/theme.tsx"],"sourcesContent":["/**\n * Cognitive Theme Provider - Learning Psychology-Informed Theme System\n *\n * Implements:\n * - Semantic color tokens for learning states\n * - Dark/light/high-contrast accessibility modes\n * - Type-safe theme context with strict TypeScript\n * - Runtime theme switching without object literals in JSX\n */\n\n'use client';\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\n\n// Theme Types - Strict TypeScript Implementation\nexport type ThemeMode = 'light' | 'dark' | 'system';\nexport type LearningState = 'mastered' | 'progress' | 'review' | 'focus';\nexport type AccessibilityMode = 'default' | 'high-contrast' | 'reduced-motion';\n\ninterface CognitiveColors {\n  // Learning States - Psychology-Informed\n  mastered: string; // Green = completed/mastered\n  progress: string; // Yellow = in progress\n  review: string; // Red = needs review/urgent\n  focus: string; // Blue = focus/primary actions\n\n  // UI Foundation\n  background: string;\n  foreground: string;\n\n  // Neutral System for Cognitive Load Reduction\n  neutral: {\n    50: string;\n    100: string;\n    200: string;\n    500: string;\n    800: string;\n    900: string;\n  };\n}\n\ninterface ThemeConfig {\n  mode: ThemeMode;\n  accessibilityMode: AccessibilityMode;\n  colors: CognitiveColors;\n  isDark: boolean;\n}\n\ninterface ThemeContextType {\n  theme: ThemeConfig;\n  setThemeMode: (mode: ThemeMode) => void;\n  setAccessibilityMode: (mode: AccessibilityMode) => void;\n  getLearningStateColor: (state: LearningState) => string;\n  toggleTheme: () => void;\n}\n\n// Theme Configurations\nconst lightTheme: CognitiveColors = {\n  mastered: '#22c55e',\n  progress: '#eab308',\n  review: '#ef4444',\n  focus: '#3b82f6',\n  background: '#ffffff',\n  foreground: '#171717',\n  neutral: {\n    50: '#f9fafb',\n    100: '#f3f4f6',\n    200: '#e5e7eb',\n    500: '#6b7280',\n    800: '#1f2937',\n    900: '#111827',\n  },\n};\n\nconst darkTheme: CognitiveColors = {\n  mastered: '#34d399',\n  progress: '#fbbf24',\n  review: '#f87171',\n  focus: '#60a5fa',\n  background: '#0a0a0a',\n  foreground: '#ededed',\n  neutral: {\n    50: '#111827',\n    100: '#1f2937',\n    200: '#374151',\n    500: '#9ca3af',\n    800: '#e5e7eb',\n    900: '#f9fafb',\n  },\n};\n\nconst highContrastTheme: CognitiveColors = {\n  mastered: '#16a34a',\n  progress: '#ca8a04',\n  review: '#dc2626',\n  focus: '#1d4ed8',\n  background: '#ffffff',\n  foreground: '#000000',\n  neutral: {\n    50: '#ffffff',\n    100: '#f3f4f6',\n    200: '#d1d5db',\n    500: '#000000',\n    800: '#000000',\n    900: '#000000',\n  },\n};\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function useCognitiveTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useCognitiveTheme must be used within a CognitiveThemeProvider');\n  }\n  return context;\n}\n\ninterface CognitiveThemeProviderProps {\n  children: React.ReactNode;\n  defaultTheme?: ThemeMode;\n  defaultAccessibility?: AccessibilityMode;\n}\n\nexport function CognitiveThemeProvider({\n  children,\n  defaultTheme = 'system',\n  defaultAccessibility = 'default',\n}: CognitiveThemeProviderProps) {\n  const [themeMode, setThemeMode] = useState<ThemeMode>(defaultTheme);\n  const [accessibilityMode, setAccessibilityMode] =\n    useState<AccessibilityMode>(defaultAccessibility);\n  const [isDark, setIsDark] = useState(false);\n\n  // Determine effective theme based on mode and system preference\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const updateTheme = () => {\n      if (themeMode === 'system') {\n        setIsDark(mediaQuery.matches);\n      } else {\n        setIsDark(themeMode === 'dark');\n      }\n    };\n\n    updateTheme();\n    mediaQuery.addEventListener('change', updateTheme);\n    return () => mediaQuery.removeEventListener('change', updateTheme);\n  }, [themeMode]);\n\n  // Apply theme classes to document\n  useEffect(() => {\n    const root = document.documentElement;\n\n    // Remove existing theme classes\n    root.classList.remove('light', 'dark', 'high-contrast', 'reduced-motion');\n\n    // Apply current theme classes\n    root.classList.add(isDark ? 'dark' : 'light');\n\n    if (accessibilityMode === 'high-contrast') {\n      root.classList.add('high-contrast');\n    }\n\n    if (accessibilityMode === 'reduced-motion') {\n      root.classList.add('reduced-motion');\n    }\n  }, [isDark, accessibilityMode]);\n\n  // Get colors based on current theme and accessibility settings\n  const getCurrentColors = (): CognitiveColors => {\n    if (accessibilityMode === 'high-contrast') {\n      return highContrastTheme;\n    }\n    return isDark ? darkTheme : lightTheme;\n  };\n\n  // Get color for specific learning state - returns string, never object\n  const getLearningStateColor = (state: LearningState): string => {\n    const colors = getCurrentColors();\n    return colors[state];\n  };\n\n  const toggleTheme = () => {\n    setThemeMode((prevMode) => {\n      if (prevMode === 'light') return 'dark';\n      if (prevMode === 'dark') return 'system';\n      return 'light';\n    });\n  };\n\n  const theme: ThemeConfig = {\n    mode: themeMode,\n    accessibilityMode,\n    colors: getCurrentColors(),\n    isDark,\n  };\n\n  const contextValue: ThemeContextType = {\n    theme,\n    setThemeMode,\n    setAccessibilityMode,\n    getLearningStateColor,\n    toggleTheme,\n  };\n\n  return <ThemeContext.Provider value={contextValue}>{children}</ThemeContext.Provider>;\n}\n\n// Utility hook for learning state styling\nexport function useLearningStateStyles() {\n  const { getLearningStateColor } = useCognitiveTheme();\n\n  return {\n    getMasteredStyle: () => ({\n      backgroundColor: getLearningStateColor('mastered'),\n      color: '#ffffff',\n    }),\n    getProgressStyle: () => ({\n      backgroundColor: getLearningStateColor('progress'),\n      color: '#000000',\n    }),\n    getReviewStyle: () => ({\n      backgroundColor: getLearningStateColor('review'),\n      color: '#ffffff',\n    }),\n    getFocusStyle: () => ({\n      backgroundColor: getLearningStateColor('focus'),\n      color: '#ffffff',\n    }),\n  };\n}\n\n// CSS-in-JS helper that returns explicit strings\nexport function getCognitiveColorValue(state: LearningState, theme: ThemeConfig): string {\n  return theme.colors[state];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/jamiecraik/repos/ai-engineering-roadmap/node_modules/.pnpm/next%4015.3.4_%40babel%2Bcore%407.27.7_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///Users/jamiecraik/repos/ai-engineering-roadmap/node_modules/.pnpm/next%4015.3.4_%40babel%2Bcore%407.27.7_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0NAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/jamiecraik/repos/ai-engineering-roadmap/node_modules/.pnpm/next%4015.3.4_%40babel%2Bcore%407.27.7_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0NAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}