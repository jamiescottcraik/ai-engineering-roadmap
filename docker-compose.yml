# docker-compose.yml — brAInwav MAS base stack
# ─────────────────────────────────────────────────────────────────────────────
# Production‑grade baseline; development overrides live in docker-compose.dev.yml
#   prod  : docker-compose up -d
#   dev   : docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d
version: "3.8"

x-env: &default-env
  env_file:
    - apps/api/.env

services:
  # ─── FastAPI backend ──────────────────────────────────────────────────────
  api:
    <<: *default-env
    build:
      context: apps/api
      dockerfile: Dockerfile
    container_name: brainwav-api
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started
    networks: [brainwav-net]
    # prod cmd (no reload)
    command: >-
      uv run uvicorn src.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"  # expose for external load balancer, health‑checks etc.

  # ─── PostgreSQL ──────────────────────────────────────────────────────────
  db:
    image: postgres:15-alpine
    container_name: brainwav-db
    ports: ["5432:5432"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    <<: *default-env
    networks: [brainwav-net]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ─── Ollama LLM runtime ──────────────────────────────────────────────────
  ollama:
    image: ollama/ollama:latest
    container_name: brainwav-ollama
    ports: ["11434:11434"]
    volumes:
      - ollama_data:/root/.ollama
    networks: [brainwav-net]
    # Optional first‑boot model pull
    # command: >-
    #   bash -c "ollama serve & ollama pull llama2 && wait"

volumes:
  postgres_data:
  ollama_data:

networks:
  brainwav-net:
    driver: bridge
    container_name: brainwav-backend
    ports:
      - "8000:8000"
    volumes:
      - ./:/workspace
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started
    networks:
      - brainwav-net
    restart: unless-stopped
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:8000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      sh -c "uvicorn backend.src.main:app --host 0.0.0.0 --port 8000 --reload"

  # A PostgreSQL database service for persistent data storage.
  db:
    image: postgres:15-alpine
    container_name: brainwav-db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - brainwav-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  # The Ollama service for running local LLMs.
  ollama:
    image: ollama/ollama:latest
    container_name: brainwav-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - brainwav-net

# Named volumes for persistent data storage.
volumes:
  postgres_data:
  ollama_data:

# A dedicated network for services to communicate with each other.
networks:
  brainwav-net:
    driver: bridge
